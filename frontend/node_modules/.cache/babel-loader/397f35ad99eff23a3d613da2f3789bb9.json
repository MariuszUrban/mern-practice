{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mariuszurban/Desktop/MOJE PROJEKTY/3. MERN practice/frontend/src/places/pages/NewPlace.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useReducer } from \"react\";\nimport \"./NewPlace.css\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/components/util/validators\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return { ...state,\n        input: { ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function NewPlace() {\n  _s();\n\n  useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: \"\",\n        isValid: false\n      }\n    },\n    description: {\n      title: {\n        value: \"\",\n        isValid: false\n      }\n    },\n    isValid: false\n  });\n  const titleInputHandler = useCallback((id, value, isValid) => {}, []);\n  const descriptionInputHandler = useCallback((id, value, isValid) => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"\",\n    className: \"place-form\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: \"title\",\n      element: \"input\",\n      type: \"text\",\n      label: \"Title\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please enter valid title\",\n      onInput: titleInputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"description\",\n      element: \"textarea\",\n      label: \"Description\",\n      validators: [VALIDATOR_MINLENGTH(5)],\n      errorText: \"Please enter valid description.\",\n      onInput: descriptionInputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewPlace, \"KKWz64T79qzgsEHnxE7mvqswOPE=\");\n\n_c = NewPlace;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPlace\");","map":{"version":3,"sources":["/Users/mariuszurban/Desktop/MOJE PROJEKTY/3. MERN practice/frontend/src/places/pages/NewPlace.js"],"names":["React","useCallback","useReducer","Input","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","input","value","NewPlace","title","description","titleInputHandler","id","descriptionInputHandler"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,QAA+C,OAA/C;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,SACEC,mBADF,EAEEC,iBAFF,QAGO,yCAHP;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,UAAIC,WAAW,GAAG,IAAlB;;AACA,WAAK,MAAMC,OAAX,IAAsBJ,KAAK,CAACK,MAA5B,EAAoC;AAClC,YAAID,OAAO,KAAKH,MAAM,CAACG,OAAvB,EAAgC;AAC9BD,UAAAA,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACK,OAApC;AACD,SAFD,MAEO;AACLH,UAAAA,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAN,CAAaD,OAAb,EAAsBE,OAAnD;AACD;AACF;;AACD,aAAO,EACL,GAAGN,KADE;AAELO,QAAAA,KAAK,EAAE,EACL,GAAGP,KAAK,CAACK,MADJ;AAEL,WAACJ,MAAM,CAACG,OAAR,GAAkB;AAAEI,YAAAA,KAAK,EAAEP,MAAM,CAACO,KAAhB;AAAuBF,YAAAA,OAAO,EAAEL,MAAM,CAACK;AAAvC;AAFb;AAFF,OAAP;;AAQF;AACE,aAAON,KAAP;AAnBJ;AAqBD,CAtBD;;AAwBA,eAAe,SAASS,QAAT,GAAoB;AAAA;;AACjCd,EAAAA,UAAU,CAACI,WAAD,EAAc;AACtBM,IAAAA,MAAM,EAAE;AACNK,MAAAA,KAAK,EAAE;AACLF,QAAAA,KAAK,EAAE,EADF;AAELF,QAAAA,OAAO,EAAE;AAFJ;AADD,KADc;AAOtBK,IAAAA,WAAW,EAAE;AACXD,MAAAA,KAAK,EAAE;AACLF,QAAAA,KAAK,EAAE,EADF;AAELF,QAAAA,OAAO,EAAE;AAFJ;AADI,KAPS;AAatBA,IAAAA,OAAO,EAAE;AAba,GAAd,CAAV;AAeA,QAAMM,iBAAiB,GAAGlB,WAAW,CAAC,CAACmB,EAAD,EAAKL,KAAL,EAAYF,OAAZ,KAAwB,CAAE,CAA3B,EAA6B,EAA7B,CAArC;AACA,QAAMQ,uBAAuB,GAAGpB,WAAW,CAAC,CAACmB,EAAD,EAAKL,KAAL,EAAYF,OAAZ,KAAwB,CAAE,CAA3B,EAA6B,EAA7B,CAA3C;AAEA,sBACE;AAAM,IAAA,MAAM,EAAC,EAAb;AAAgB,IAAA,SAAS,EAAC,YAA1B;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,EAAE,EAAC,OADL;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAC,OAJR;AAKE,MAAA,UAAU,EAAE,CAACR,iBAAiB,EAAlB,CALd;AAME,MAAA,SAAS,EAAC,0BANZ;AAOE,MAAA,OAAO,EAAEc;AAPX;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,KAAD;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,KAAK,EAAC,aAHR;AAIE,MAAA,UAAU,EAAE,CAACf,mBAAmB,CAAC,CAAD,CAApB,CAJd;AAKE,MAAA,SAAS,EAAC,iCALZ;AAME,MAAA,OAAO,EAAEiB;AANX;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAxCuBL,Q;;KAAAA,Q","sourcesContent":["import React, { useCallback, useReducer } from \"react\";\nimport \"./NewPlace.css\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/components/util/validators\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        input: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function NewPlace() {\n  useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    description: {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    isValid: false,\n  });\n  const titleInputHandler = useCallback((id, value, isValid) => {}, []);\n  const descriptionInputHandler = useCallback((id, value, isValid) => {}, []);\n\n  return (\n    <form action=\"\" className=\"place-form\">\n      <Input\n        id=\"title\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Title\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter valid title\"\n        onInput={titleInputHandler}\n      />\n      <Input\n        id=\"description\"\n        element=\"textarea\"\n        label=\"Description\"\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter valid description.\"\n        onInput={descriptionInputHandler}\n      />\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}