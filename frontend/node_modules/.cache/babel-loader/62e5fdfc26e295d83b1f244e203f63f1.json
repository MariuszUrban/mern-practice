{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  _s();\n\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n};\n\n_s(useForm, \"j6oJ1gEjMHnwQZ2ZcOpstJNNSwA=\");\n\nconst inputHandler = useCallback((id, value, isValid) => {\n  dispatch({\n    type: \"INPUT_CHANGE\",\n    value: value,\n    isValid: isValid,\n    inputId: id\n  });\n}, []);","map":{"version":3,"sources":["/Users/mariuszurban/Desktop/MOJE PROJEKTY/3. MERN practice/frontend/src/shared/hooks/form-hook.js"],"names":["useCallback","useReducer","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","useForm","initialInputs","initialFormValidity","formState","dispatch","inputHandler","id"],"mappings":";;AAAA,SAAUA,WAAV,EAAuBC,UAAvB,QAAyC,OAAzC;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,UAAIC,WAAW,GAAG,IAAlB;;AACA,WAAK,MAAMC,OAAX,IAAsBJ,KAAK,CAACK,MAA5B,EAAoC;AAClC,YAAID,OAAO,KAAKH,MAAM,CAACG,OAAvB,EAAgC;AAC9BD,UAAAA,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACK,OAApC;AACD,SAFD,MAEO;AACLH,UAAAA,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAN,CAAaD,OAAb,EAAsBE,OAAnD;AACD;AACF;;AACD,aAAO,EACL,GAAGN,KADE;AAELK,QAAAA,MAAM,EAAE,EACN,GAAGL,KAAK,CAACK,MADH;AAEN,WAACJ,MAAM,CAACG,OAAR,GAAkB;AAAEG,YAAAA,KAAK,EAAEN,MAAM,CAACM,KAAhB;AAAuBD,YAAAA,OAAO,EAAEL,MAAM,CAACK;AAAvC;AAFZ,SAFH;AAMLA,QAAAA,OAAO,EAAEH;AANJ,OAAP;;AAQF;AACE,aAAOH,KAAP;AAnBJ;AAqBD,CAtBH;;AAwBA,OAAO,MAAMQ,OAAO,GAAG,CAACC,aAAD,EAAgBC,mBAAhB,KAAwC;AAAA;;AAC3D,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBd,UAAU,CAACC,WAAD,EAAc;AAClDM,IAAAA,MAAM,EAAEI,aAD0C;AAElDH,IAAAA,OAAO,EAAEI;AAFyC,GAAd,CAAxC;AAIH,CALM;;GAAMF,O;;AAOb,MAAMK,YAAY,GAAGhB,WAAW,CAAC,CAACiB,EAAD,EAAKP,KAAL,EAAYD,OAAZ,KAAwB;AACrDM,EAAAA,QAAQ,CAAC;AACPV,IAAAA,IAAI,EAAE,cADC;AAEPK,IAAAA,KAAK,EAAEA,KAFA;AAGPD,IAAAA,OAAO,EAAEA,OAHF;AAIPF,IAAAA,OAAO,EAAEU;AAJF,GAAD,CAAR;AAMD,CAP6B,EAO3B,EAP2B,CAAhC","sourcesContent":["import  { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n      case 'INPUT_CHANGE':\n        let formIsValid = true;\n        for (const inputId in state.inputs) {\n          if (inputId === action.inputId) {\n            formIsValid = formIsValid && action.isValid;\n          } else {\n            formIsValid = formIsValid && state.inputs[inputId].isValid;\n          }\n        }\n        return {\n          ...state,\n          inputs: {\n            ...state.inputs,\n            [action.inputId]: { value: action.value, isValid: action.isValid }\n          },\n          isValid: formIsValid\n        };\n      default:\n        return state;\n    }\n  };\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: initialInputs, \n        isValid: initialFormValidity\n      });\n}\n\nconst inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);"]},"metadata":{},"sourceType":"module"}