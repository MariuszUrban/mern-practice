{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mariuszurban/Desktop/MOJE PROJEKTY/3. MERN practice/frontend/src/shared/components/FormElements/Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport \"../FormElements/Input.css\";\nimport { validate } from \"../util/validators\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return { ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n\n    case 'TOUCH':\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function Input(props) {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: \"\",\n    isValid: false\n  });\n\n  const changeHandler = event => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\"\n    });\n  };\n\n  const element = props.element === \"input\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `form-control ${!inputState.isValid && \"form-control--invalid\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), element, !inputState.isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Input, \"U01HtyXTTXD1JC0a0ik45i8kVeM=\");\n\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/mariuszurban/Desktop/MOJE PROJEKTY/3. MERN practice/frontend/src/shared/components/FormElements/Input.js"],"names":["React","useReducer","validate","inputReducer","state","action","type","value","val","isValid","validators","Input","props","inputState","dispatch","changeHandler","event","target","touchHandler","element","id","placeholder","rows","label","errorText"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAO,2BAAP;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELG,QAAAA,KAAK,EAAEF,MAAM,CAACG,GAFT;AAGLC,QAAAA,OAAO,EAAEP,QAAQ,CAACG,MAAM,CAACG,GAAR,EAAaH,MAAM,CAACK,UAApB;AAHZ,OAAP;;AAKF,SAAK,OAAL;AACI,aAAO,EACH,GAAGN;AADA,OAAP;;AAIJ;AACE,aAAOA,KAAP;AAbJ;AAeD,CAhBD;;AAkBA,eAAe,SAASO,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACnC,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBb,UAAU,CAACE,YAAD,EAAe;AACtDI,IAAAA,KAAK,EAAE,EAD+C;AAEtDE,IAAAA,OAAO,EAAE;AAF6C,GAAf,CAAzC;;AAKA,QAAMM,aAAa,GAAIC,KAAD,IAAW;AAC/BF,IAAAA,QAAQ,CAAC;AACPR,MAAAA,IAAI,EAAE,QADC;AAEPE,MAAAA,GAAG,EAAEQ,KAAK,CAACC,MAAN,CAAaV,KAFX;AAGPG,MAAAA,UAAU,EAAEE,KAAK,CAACF;AAHX,KAAD,CAAR;AAKD,GAND;;AAQA,QAAMQ,YAAY,GAAG,MAAM;AACzBJ,IAAAA,QAAQ,CAAC;AACPR,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GAJD;;AAMA,QAAMa,OAAO,GACXP,KAAK,CAACO,OAAN,KAAkB,OAAlB,gBACE;AACE,IAAA,EAAE,EAAEP,KAAK,CAACQ,EADZ;AAEE,IAAA,IAAI,EAAER,KAAK,CAACN,IAFd;AAGE,IAAA,WAAW,EAAEM,KAAK,CAACS,WAHrB;AAIE,IAAA,QAAQ,EAAEN,aAJZ;AAKE,IAAA,MAAM,EAAEG,YALV;AAME,IAAA,KAAK,EAAEL,UAAU,CAACN;AANpB;AAAA;AAAA;AAAA;AAAA,UADF,gBAUE;AACE,IAAA,EAAE,EAAEK,KAAK,CAACQ,EADZ;AAEE,IAAA,IAAI,EAAER,KAAK,CAACU,IAAN,IAAc,CAFtB;AAGE,IAAA,QAAQ,EAAEP,aAHZ;AAIE,IAAA,MAAM,EAAEG,YAJV;AAKE,IAAA,KAAK,EAAEL,UAAU,CAACN;AALpB;AAAA;AAAA;AAAA;AAAA,UAXJ;AAoBA,sBACE;AACE,IAAA,SAAS,EAAG,gBACV,CAACM,UAAU,CAACJ,OAAZ,IAAuB,uBACxB,EAHH;AAAA,4BAKE;AAAO,MAAA,OAAO,EAAEG,KAAK,CAACQ,EAAtB;AAAA,gBAA2BR,KAAK,CAACW;AAAjC;AAAA;AAAA;AAAA;AAAA,YALF,EAMGJ,OANH,EAOG,CAACN,UAAU,CAACJ,OAAZ,iBAAuB;AAAA,gBAAIG,KAAK,CAACY;AAAV;AAAA;AAAA;AAAA;AAAA,YAP1B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAnDuBb,K;;KAAAA,K","sourcesContent":["import React, { useReducer } from \"react\";\nimport \"../FormElements/Input.css\";\nimport { validate } from \"../util/validators\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case 'TOUCH':\n        return {\n            ...state,\n            \n        }\n    default:\n      return state;\n  }\n};\n\nexport default function Input(props) {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: \"\",\n    isValid: false,\n  });\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}